options {
    STATIC = false;
}

PARSER_BEGIN(Parser)

package org.odve.parser;

import org.odve.lang.RulesBuilder;

import java.util.List;
import java.util.ArrayList;
import java.io.InputStream;

import static java.util.Collections.emptyList;

public class Parser {
    private RulesBuilder builder;

    public Parser() {
    }

    private void setRulesBuilder(RulesBuilder builder) {
        this.builder = builder;
    }

    public void parse(InputStream io, RulesBuilder builder) throws ParseException, TokenMgrError {
        Parser parser = new Parser(io);
        parser.setRulesBuilder(builder);
        parser.rules();
    }
}

PARSER_END(Parser)

// -- Tokens --

SKIP:  { " " | "\t" | "\n" | "\r"}

SKIP : {
  "/*" : WithinComment
}

<WithinComment> SKIP : {
  "*/" : DEFAULT
}

<WithinComment> MORE : {
  <~[]>
}

TOKEN: {
    <GAME : "game"> |
    <PLAYERS : "players"> |
    <ORDER : "order">
}

TOKEN: {
    <EOL : ";">
}

TOKEN: {
    <LPAREN: "("> |
    <RPAREN: ")"> |
    <LBRACE: "{"> |
    <RBRACE: "}"> |
    <LBRACKET: "["> |
    <RBRACKET: "]"> |
    <COLON: ":"> |
    <DOT: "."> |
    <COMMA: ","> |
    <PLUS: "+"> |
    <MINUS: "-">
}

TOKEN: {
    <NUMBER: (<MINUS>)? ( <DIGITS> ) > |
    <DIGITS: ( <DIGIT> )+ > |
    <ID: <LETTER> (<LETTER> | <DIGIT> | "_")*> |
    <#LETTER: ["A"-"Z", "a"-"z"]> |
    <#DIGIT: ["0"-"9"]>
}

// -- Types --

String id(): {
    Token value;
} {
    value = <ID> { return value.image; }
}

Integer num(): {
    Token value;
} {
    value = <NUMBER> { return Integer.valueOf(value.image); }
}

List<String> list(): {
    List<String> values = new ArrayList<String>();
    String value;
} {
    value = id() { values.add(value); }
    (<COMMA> value = id() { values.add(value); })*

    { return values; }
}

List<String> params(): {
    List<String> values = emptyList();
} {
    <LPAREN> (values = list())? <RPAREN> { return values; }
}

// -- Rules --

void rules(): {} {
    name() <EOL>
    players() <EOL>
    order() <EOL>

    <EOF>
}

void name(): {
    String name;
} {
    <GAME> name = id() { builder.name(name); }
}

void players(): {
    List<String> players;
} {
    <PLAYERS> players = list() { builder.players(players); }
}

void order() : {
    String orderName;
    List<String> params;
} {
    <ORDER> orderName = id() params = params() { builder.order(orderName, params); }
}